// Code generated by sqlc. DO NOT EDIT.

package search_queries

import (
	"database/sql"
	"time"

	"github.com/tabbed/pqtype"
)

type Author struct {
	Did    string `json:"did"`
	Handle string `json:"handle"`
}

type AuthorBlock struct {
	ActorDid  string    `json:"actor_did"`
	TargetDid string    `json:"target_did"`
	CreatedAt time.Time `json:"created_at"`
}

type AuthorCluster struct {
	AuthorDid string `json:"author_did"`
	ClusterID int32  `json:"cluster_id"`
}

type AuthorLabel struct {
	AuthorDid string    `json:"author_did"`
	LabelID   int32     `json:"label_id"`
	CreatedAt time.Time `json:"created_at"`
}

type Cluster struct {
	ID          int32  `json:"id"`
	LookupAlias string `json:"lookup_alias"`
	Name        string `json:"name"`
}

type Image struct {
	Cid          string                `json:"cid"`
	PostID       string                `json:"post_id"`
	AuthorDid    string                `json:"author_did"`
	AltText      sql.NullString        `json:"alt_text"`
	MimeType     string                `json:"mime_type"`
	FullsizeUrl  string                `json:"fullsize_url"`
	ThumbnailUrl string                `json:"thumbnail_url"`
	CreatedAt    time.Time             `json:"created_at"`
	CvCompleted  bool                  `json:"cv_completed"`
	CvRunAt      sql.NullTime          `json:"cv_run_at"`
	CvClasses    pqtype.NullRawMessage `json:"cv_classes"`
}

type Label struct {
	ID          int64  `json:"id"`
	LookupAlias string `json:"lookup_alias"`
	Name        string `json:"name"`
}

type Post struct {
	ID                  string          `json:"id"`
	Text                string          `json:"text"`
	ParentPostID        sql.NullString  `json:"parent_post_id"`
	RootPostID          sql.NullString  `json:"root_post_id"`
	AuthorDid           string          `json:"author_did"`
	CreatedAt           time.Time       `json:"created_at"`
	HasEmbeddedMedia    bool            `json:"has_embedded_media"`
	ParentRelationship  sql.NullString  `json:"parent_relationship"`
	Sentiment           sql.NullString  `json:"sentiment"`
	SentimentConfidence sql.NullFloat64 `json:"sentiment_confidence"`
}

type PostHotness struct {
	ID                  string          `json:"id"`
	Text                string          `json:"text"`
	ParentPostID        sql.NullString  `json:"parent_post_id"`
	RootPostID          sql.NullString  `json:"root_post_id"`
	AuthorDid           string          `json:"author_did"`
	CreatedAt           time.Time       `json:"created_at"`
	HasEmbeddedMedia    bool            `json:"has_embedded_media"`
	ParentRelationship  sql.NullString  `json:"parent_relationship"`
	Sentiment           sql.NullString  `json:"sentiment"`
	SentimentConfidence sql.NullFloat64 `json:"sentiment_confidence"`
	PostLabels          interface{}     `json:"post_labels"`
	ClusterLabel        sql.NullString  `json:"cluster_label"`
	AuthorLabels        interface{}     `json:"author_labels"`
	Hotness             float64         `json:"hotness"`
}

type PostLabel struct {
	PostID string `json:"post_id"`
	Label  string `json:"label"`
}

type PostLike struct {
	PostID    string `json:"post_id"`
	LikeCount int64  `json:"like_count"`
}
