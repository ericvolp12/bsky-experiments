// Code generated by sqlc. DO NOT EDIT.
// source: get_labels.sql

package search_queries

import (
	"context"
)

const getAllLabels = `-- name: GetAllLabels :many
SELECT labels.id, labels.name, labels.lookup_alias
FROM labels
ORDER BY labels.id ASC
LIMIT $2
OFFSET $1
`

type GetAllLabelsParams struct {
	Offset int32 `json:"offset"`
	Limit  int32 `json:"limit"`
}

type GetAllLabelsRow struct {
	ID          int64  `json:"id"`
	Name        string `json:"name"`
	LookupAlias string `json:"lookup_alias"`
}

func (q *Queries) GetAllLabels(ctx context.Context, arg GetAllLabelsParams) ([]GetAllLabelsRow, error) {
	rows, err := q.query(ctx, q.getAllLabelsStmt, getAllLabels, arg.Offset, arg.Limit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetAllLabelsRow
	for rows.Next() {
		var i GetAllLabelsRow
		if err := rows.Scan(&i.ID, &i.Name, &i.LookupAlias); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
